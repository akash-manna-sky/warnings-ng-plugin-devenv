name: jenkins-plugin-devenv

services:
  jenkins:
    container_name: devenv-jenkins
    build:
      context: docker/images/jenkins-controller
    image: devenv/jenkins-controller
    volumes:
      - ./docker/volumes/jenkins-home:/var/jenkins_home # Mounts the local jenkins_home volume to the /var/jenkins_home path inside the container
      - agent-ssh-dir:/ssh-dir # Mounts the shared volume agent-ssh-dir to a path inside the container
    ports:
      - 8080:8080   # Jenkins UI - HOST:CONTAINER
      - 8000:8000   # Jenkins controller debugging port - HOST:CONTAINER
    environment:
      - GITHUB_APP=${GITHUB_APP_KEY}
      - TRY_UPGRADE_IF_NO_MARKER=true
      - JAVA_OPTS= -Dstapler.jelly.noCache=true  -Dhudson.remoting.ClassFilter=com.google.common.collect.ImmutableListMultimap -DexecutableWar.jetty.disableCustomSessionIdCookieName=true -DexecutableWar.jetty.sessionIdCookieName=devenv -agentlib:jdwp=transport=dt_socket,address=*:8000,suspend=n,server=y
    user: ${CURRENT_UID}
    restart: unless-stopped
    depends_on:
      key-generator:
        condition: service_completed_successfully # Depends on the successful completion of the sidekick_service
    healthcheck:
      test: ["CMD-SHELL", "[ -f /ssh-dir/conductor_ok ] || exit 1"]
      # Checks if the conductor_ok file exists in the /ssh-dir path
      interval: 5s
      timeout: 10s
      retries: 5

  key-generator:
    container_name: devenv-key-generator
    build:
      context: docker/images/key-generator
    image: devenv/key-generator
    stdin_open: true
    tty: true
    # The entrypoint script generates the SSH keys and outputs them to the /ssh-dir directory.
    entrypoint: sh -c "/usr/local/bin/keygen.sh /ssh-dir" # Runs the keygen.sh script and specifies the output directory
    volumes:
      - agent-ssh-dir:/ssh-dir # Mounts the agent-ssh-dir volume to the /ssh-dir path inside the container
    # The healthcheck command checks if the conductor_ok file exists in the /ssh-dir directory.
    healthcheck:
      test: ["CMD-SHELL", "[ -f /ssh-dir/conductor_ok ] || exit 1"]
      # Checks if the conductor_ok file exists in the /ssh-dir path
      interval: 5s
      timeout: 10s
      retries: 5

  java-agent:
    container_name: devenv-java-agent
    build: docker/images/java-agent
    image: devenv/java-agent
    ports:
      - 8001:8001   # Jenkins agent debugging port - HOST:CONTAINER
    depends_on:
      key-generator:
        condition: service_completed_successfully # Depends on the successful completion of the sidekick_service
      jenkins:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "[ -f /ssh-dir/conductor_ok ] || exit 1"]
      # Checks if the conductor_ok file exists in the /ssh-dir path
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - agent-ssh-dir:/home/jenkins/.ssh:ro # Mounts the agent-ssh-dir volume to the /home/jenkins/.ssh path inside the container as read-only

volumes:
  agent-ssh-dir:
    name: devenv-agent-ssh-dir # Creates a named volume called agent-ssh-dir
  jenkins_home:
    name: devenv-jenkins_home # Creates a named volume called jenkins_home
    external: true
